version: 2.1

jobs:
  test:
    docker:
      - image: node:15.6.0-alpine
        environment:
          BT_ES_ENDPOINT: http://es:9200
          BT_MONGO_ENDPOINT: mongodb://mongo/dev
          BT_SMTP_HOST: smtp
          BT_SMTP_PORT: 25
          BT_S3_ENDPOINT: http://s3:4569/
      - image: mongo:2.6.8
        name: mongo
      - image: elasticsearch:6.5.4
        name: es
        environment:
          discovery.type: single-node
      - image: lphoward/fake-s3:latest
        name: s3
      - image: tecnativa/smtp-sink:latest
        name: smtp
    steps:
      - checkout
      - restore_cache:
          keys:
            - bt_core_nm_{{ checksum "package.json" }}
            - bt_core_nm_
      - run:
          name: Test
          command: |
            yarn install
            yarn lint
            yarn init-local
            npx nyc yarn test
            yarn coverage
          environment:
            NODE_ENV: test
      - save_cache:
          key: bt_core_nm_{{ checksum "package.json" }}
          paths:
            - node_modules/

  deploy-image-dev:
    machine:
      enabled: true
      image: circleci/classic:201808-01
    steps:
      - checkout
      - restore_cache:
          keys:
            - bt_core_nm_prod_{{ checksum "package.json" }}
            - bt_core_nm_prod_
      - run:
          name: Get Production Dependencies
          command: yarn install --production
      - save_cache:
          key: bt_core_nm_prod_{{ checksum "package.json" }}
          paths:
            - node_modules/
      - run:
          name: Build Docker Image
          command: docker build -t bottom-time/core .
      - run:
          name: Deploy Docker Image
          command: |
            $(aws ecr get-login --no-include-email --region us-east-1)
            docker tag bottom-time/core:latest 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core:latest
            docker push 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core:latest
            docker tag bottom-time/core:latest 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core:$CIRCLE_BUILD_NUM
            docker push 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core:$CIRCLE_BUILD_NUM
            mkdir temp/
            echo $CIRCLE_BUILD_NUM > temp/build
            aws s3 mv temp/build s3://bottomtime-tfstate/dev_build_number

  deploy-image-prod:
    machine:
      enabled: true
      image: circleci/classic:201808-01
    steps:
      - checkout
      - restore_cache:
          keys:
            - bt_core_nm_prod_{{ checksum "package.json" }}
            - bt_core_nm_prod_
      - run:
          name: Get Production Dependencies
          command: yarn install --production
      - save_cache:
          key: bt_core_nm_prod_{{ checksum "package.json" }}
          paths:
            - node_modules/
      - run:
          name: Build Docker Image
          command: docker build -t bottom-time/core .
      - run:
          name: Deploy Docker Image
          command: |
            $(aws ecr get-login --no-include-email --region us-east-1)
            docker tag bottom-time/core:latest 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core-prod:latest
            docker push 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core-prod:latest
            docker tag bottom-time/core:latest 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core-prod:$CIRCLE_BUILD_NUM
            docker push 961445962603.dkr.ecr.us-east-1.amazonaws.com/bottom-time/core-prod:$CIRCLE_BUILD_NUM
            mkdir temp/
            echo $CIRCLE_BUILD_NUM > temp/build
            aws s3 mv temp/build s3://bottomtime-tfstate/prod_build_number

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test
      - deploy-image-dev:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - deploy-image-prod:
          requires:
            - test
          filters:
            branches:
              only:
                - prod
